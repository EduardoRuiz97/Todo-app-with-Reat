{"ast":null,"code":"var _jsxFileName = \"/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 7/01-starting-project__template/01-starting-project/src/store/ContexProvider.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer, useState } from \"react\";\nimport toDoContext from \"./toDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  mainTaskArray: [],\n  allTaskArray: [],\n  taskLeft: 0\n};\nconst addTaskReducer = (state, action) => {\n  let taskArray;\n  let leftTask;\n  if (action.type === 'ADD__TASK') {\n    taskArray = state.mainTaskArray.concat(action.task);\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      taskLeft: taskArray.length\n    };\n  }\n  if (action.type === 'DELETE__TASK') {\n    taskArray = state.mainTaskArray.filter(task => task.id !== action.id);\n    if (state.taskLeft === 0) {\n      leftTask = 0;\n    } else {\n      leftTask = taskArray.length;\n    }\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      taskLeft: leftTask\n    };\n  }\n  if (action.type === 'COMPLETED__TASK') {\n    const modifiedArray = state.mainTaskArray.map(item => {\n      if (item.id === action.id) {\n        item.isCompleted = true;\n      }\n      return item;\n    });\n    return {\n      mainTaskArray: modifiedArray,\n      allTaskArray: modifiedArray,\n      taskLeft: state.taskLeft - 1\n    };\n  }\n  if (action.type === 'SHOW__ALL') {\n    return {\n      mainTaskArray: state.allTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft\n    };\n  }\n  if (action.type === 'ACTIVE__SHOW') {\n    const activeTaskArray = state.allTaskArray.filter(task => !task.isCompleted);\n    return {\n      mainTaskArray: activeTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft\n    };\n  }\n  if (action.type === 'COMPLETED__SHOW') {\n    const activeTaskArray = state.allTaskArray.filter(task => task.isCompleted);\n    return {\n      mainTaskArray: activeTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft\n    };\n  }\n  return defaultState;\n};\nconst ContextProvider = props => {\n  _s();\n  const [taskReducer, dispatchTaskReducer] = useReducer(addTaskReducer, defaultState);\n  const [isDarkModeOn, setDarkModeOn] = useState(false);\n  const [animationOn, setAnimationOn] = useState();\n  const AddTaskHandler = taskObject => {\n    dispatchTaskReducer({\n      type: 'ADD__TASK',\n      task: taskObject\n    });\n  };\n  const deleteTaskHandler = id => {\n    dispatchTaskReducer({\n      type: 'DELETE__TASK',\n      id: id\n    });\n  };\n  const completedTask = id => {\n    dispatchTaskReducer({\n      type: 'COMPLETED__TASK',\n      id: id\n    });\n  };\n  const showAllTask = () => {\n    dispatchTaskReducer({\n      type: 'SHOW__ALL'\n    });\n  };\n  const showActiveTasks = () => {\n    dispatchTaskReducer({\n      type: 'ACTIVE__SHOW'\n    });\n  };\n  const showCompletedTasks = () => {\n    dispatchTaskReducer({\n      type: 'COMPLETED__SHOW'\n    });\n  };\n  const darkModeHandler = () => {\n    setDarkModeOn(!isDarkModeOn);\n  };\n  useEffect(() => {}, a);\n  const toDoContextArray = {\n    task: taskReducer.mainTaskArray,\n    numberTaskLeft: taskReducer.taskLeft,\n    darkMode: isDarkModeOn,\n    addTask: AddTaskHandler,\n    deleteTask: deleteTaskHandler,\n    completedTask: completedTask,\n    showAllTask: showAllTask,\n    showActive: showActiveTasks,\n    showCompleted: showCompletedTasks,\n    enableDarkMode: darkModeHandler\n  };\n  return /*#__PURE__*/_jsxDEV(toDoContext.Provider, {\n    value: toDoContextArray,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n};\n_s(ContextProvider, \"pgPHaDUWN8hdAewPHB9LymiduEo=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useEffect","useReducer","useState","toDoContext","jsxDEV","_jsxDEV","defaultState","mainTaskArray","allTaskArray","taskLeft","addTaskReducer","state","action","taskArray","leftTask","type","concat","task","length","filter","id","modifiedArray","map","item","isCompleted","activeTaskArray","ContextProvider","props","_s","taskReducer","dispatchTaskReducer","isDarkModeOn","setDarkModeOn","animationOn","setAnimationOn","AddTaskHandler","taskObject","deleteTaskHandler","completedTask","showAllTask","showActiveTasks","showCompletedTasks","darkModeHandler","a","toDoContextArray","numberTaskLeft","darkMode","addTask","deleteTask","showActive","showCompleted","enableDarkMode","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 7/01-starting-project__template/01-starting-project/src/store/ContexProvider.js"],"sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\nimport toDoContext from \"./toDoContext\";\n\n\nconst defaultState = {\n  mainTaskArray: [],\n  allTaskArray: [],\n  taskLeft: 0,\n};\n\nconst addTaskReducer = (state, action) => {\n\n  let taskArray;\n  let leftTask;\n\n  if (action.type === 'ADD__TASK') {\n    taskArray = state.mainTaskArray.concat(action.task);\n\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      taskLeft: taskArray.length\n    };\n  }\n\n  if (action.type === 'DELETE__TASK') {\n    taskArray = state.mainTaskArray.filter(task => task.id !== action.id);\n\n    if (state.taskLeft === 0) {\n      leftTask = 0;\n    } else {\n      leftTask = taskArray.length;\n    }\n\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      taskLeft: leftTask,\n    };\n  }\n\n  if (action.type === 'COMPLETED__TASK') {\n\n    const modifiedArray = state.mainTaskArray.map(item => {\n      if(item.id === action.id) {\n        item.isCompleted = true;\n      }\n      return item;\n    });\n\n    return {\n      mainTaskArray: modifiedArray,\n      allTaskArray: modifiedArray,\n      taskLeft: state.taskLeft -1,\n    }\n  }\n\n  if (action.type === 'SHOW__ALL') {\n\n    return {\n      mainTaskArray: state.allTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft,\n    }\n  }\n\n  if (action.type === 'ACTIVE__SHOW') {\n    const activeTaskArray = state.allTaskArray.filter(task => !task.isCompleted);\n\n    return {\n      mainTaskArray: activeTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft,\n    }\n  }\n\n  if (action.type === 'COMPLETED__SHOW') {\n    const activeTaskArray = state.allTaskArray.filter(task => task.isCompleted);\n\n    return {\n      mainTaskArray: activeTaskArray,\n      allTaskArray: state.allTaskArray,\n      taskLeft: state.taskLeft,\n    }\n  }\n\n  \n  return defaultState;\n}\n\nconst ContextProvider = props => {\n\n  const [taskReducer, dispatchTaskReducer] = useReducer(addTaskReducer, defaultState);\n\n  const [isDarkModeOn, setDarkModeOn] = useState(false);\n  const [animationOn, setAnimationOn] = useState();\n\n\n  const AddTaskHandler = (taskObject) => {\n\n    dispatchTaskReducer({type: 'ADD__TASK', task: taskObject})\n  }\n\n  const deleteTaskHandler = (id) => {\n    dispatchTaskReducer({type: 'DELETE__TASK', id: id})\n  }\n\n  const completedTask = (id) => {\n    dispatchTaskReducer({type: 'COMPLETED__TASK', id: id})\n  }\n\n  const showAllTask = () => {\n    dispatchTaskReducer({type: 'SHOW__ALL'})\n  }\n\n  const showActiveTasks = () => {\n    dispatchTaskReducer({type: 'ACTIVE__SHOW'})\n  }\n\n  const showCompletedTasks = () => {\n    dispatchTaskReducer({type: 'COMPLETED__SHOW'})\n  }\n\n  const darkModeHandler = () => {\n    setDarkModeOn(!isDarkModeOn);\n  }\n\n  useEffect(()=>{},a)\n\n  const toDoContextArray =  ({\n    task: taskReducer.mainTaskArray,\n    numberTaskLeft: taskReducer.taskLeft,\n    darkMode: isDarkModeOn,\n    addTask: AddTaskHandler,\n    deleteTask: deleteTaskHandler,\n    completedTask: completedTask,\n    showAllTask: showAllTask,\n    showActive: showActiveTasks,\n    showCompleted: showCompletedTasks,\n    enableDarkMode: darkModeHandler,\n  })\n\n\n  return <toDoContext.Provider value={toDoContextArray}>\n    {props.children}\n  </toDoContext.Provider>\n}\n\nexport default ContextProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}