{"ast":null,"code":"var _jsxFileName = \"/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 7/01-starting-project__template/01-starting-project/src/store/ContexProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport toDoContext from \"./toDoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  mainTaskArray: [],\n  taskLeft: 0\n};\nconst addTaskReducer = (state, action) => {\n  let taskArray;\n  let leftTask;\n  if (action.type === 'ADD__TASK') {\n    taskArray = state.mainTaskArray.concat(action.task);\n    return {\n      mainTaskArray: taskArray,\n      taskLeft: taskArray.length\n    };\n  }\n  if (action.type === 'DELETE__TASK') {\n    taskArray = state.mainTaskArray.filter(task => task.id !== action.id);\n    if (leftTask === 0) {\n      leftTask = 0;\n    } else {\n      leftTask = state.taskLeft - 1;\n    }\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      completed: state.completed,\n      active: state.active,\n      taskLeft: leftTask\n    };\n  }\n  return defaultState;\n};\nconst ContextProvider = props => {\n  _s();\n  const [taskReducer, dispatchTaskReducer] = useReducer(addTaskReducer, defaultState);\n  const [isDarkModeOn, setDarkModeOn] = useState(false);\n  const AddTaskHandler = taskObject => {\n    dispatchTaskReducer({\n      type: 'ADD__TASK',\n      task: taskObject\n    });\n  };\n  const deleteTaskHandler = id => {\n    dispatchTaskReducer({\n      type: 'DELETE__TASK',\n      id: id\n    });\n  };\n  const completedTask = id => {\n    dispatchTaskReducer({\n      type: 'COMPLETED__TASK',\n      id: id\n    });\n    console.log(id);\n  };\n  const showAllTask = () => {\n    dispatchTaskReducer({\n      type: 'SHOW__ALL'\n    });\n  };\n  const showActiveTasks = () => {\n    dispatchTaskReducer({\n      type: 'ACTIVE__SHOW'\n    });\n  };\n  const showCompletedTasks = () => {\n    dispatchTaskReducer({\n      type: 'COMPLETED__SHOW'\n    });\n  };\n  const darkModeHandler = () => {\n    setDarkModeOn(!isDarkModeOn);\n  };\n  const toDoContextArray = {\n    task: taskReducer.mainTaskArray,\n    taskActive: taskReducer.active,\n    taskCompleted: taskReducer.completed,\n    taskLeftNumber: taskReducer.taskLeft,\n    darkMode: isDarkModeOn,\n    addTask: AddTaskHandler,\n    deleteTask: deleteTaskHandler,\n    completedTask: completedTask,\n    showAllTask: showAllTask,\n    showActive: showActiveTasks,\n    showCompleted: showCompletedTasks,\n    enableDarkMode: darkModeHandler\n  };\n  return /*#__PURE__*/_jsxDEV(toDoContext.Provider, {\n    value: toDoContextArray,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(ContextProvider, \"E13u9blPc4vtKFDnjEnGn4wVcZc=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useReducer","useState","toDoContext","jsxDEV","_jsxDEV","defaultState","mainTaskArray","taskLeft","addTaskReducer","state","action","taskArray","leftTask","type","concat","task","length","filter","id","allTaskArray","completed","active","ContextProvider","props","_s","taskReducer","dispatchTaskReducer","isDarkModeOn","setDarkModeOn","AddTaskHandler","taskObject","deleteTaskHandler","completedTask","console","log","showAllTask","showActiveTasks","showCompletedTasks","darkModeHandler","toDoContextArray","taskActive","taskCompleted","taskLeftNumber","darkMode","addTask","deleteTask","showActive","showCompleted","enableDarkMode","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rosi/Documents/Eduardo/React/React Exercise/Ejercicio 7/01-starting-project__template/01-starting-project/src/store/ContexProvider.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\nimport toDoContext from \"./toDoContext\";\n\n\nconst defaultState = {\n  mainTaskArray: [],\n  taskLeft: 0,\n};\n\nconst addTaskReducer = (state, action) => {\n\n  let taskArray;\n  let leftTask;\n\n  if (action.type === 'ADD__TASK') {\n    taskArray = state.mainTaskArray.concat(action.task);\n\n    return {\n      mainTaskArray: taskArray,\n      taskLeft: taskArray.length\n    };\n  }\n\n  if (action.type === 'DELETE__TASK') {\n    taskArray = state.mainTaskArray.filter(task => task.id !== action.id);\n\n    if (leftTask === 0) {\n      leftTask = 0; \n    } else {\n      leftTask = state.taskLeft - 1;\n    }\n\n\n    return {\n      mainTaskArray: taskArray,\n      allTaskArray: taskArray,\n      completed: state.completed,\n      active: state.active,\n      taskLeft: leftTask,\n    };\n  }\n\n  \n  return defaultState;\n}\n\nconst ContextProvider = props => {\n\n  const [taskReducer, dispatchTaskReducer] = useReducer(addTaskReducer, defaultState);\n\n  const [isDarkModeOn, setDarkModeOn] = useState(false);\n\n\n  const AddTaskHandler = (taskObject) => {\n\n    dispatchTaskReducer({type: 'ADD__TASK', task: taskObject})\n  }\n\n  const deleteTaskHandler = (id) => {\n    dispatchTaskReducer({type: 'DELETE__TASK', id: id})\n  }\n\n  const completedTask = (id) => {\n    dispatchTaskReducer({type: 'COMPLETED__TASK', id: id})\n    console.log(id)\n  }\n\n  const showAllTask = () => {\n    dispatchTaskReducer({type: 'SHOW__ALL'})\n  }\n\n  const showActiveTasks = () => {\n    dispatchTaskReducer({type: 'ACTIVE__SHOW'})\n  }\n\n  const showCompletedTasks = () => {\n    dispatchTaskReducer({type: 'COMPLETED__SHOW'})\n  }\n\n  const darkModeHandler = () => {\n    setDarkModeOn(!isDarkModeOn);\n  }\n\n  const toDoContextArray =  ({\n    task: taskReducer.mainTaskArray,\n    taskActive: taskReducer.active,\n    taskCompleted: taskReducer.completed,\n    taskLeftNumber : taskReducer.taskLeft,\n    darkMode: isDarkModeOn,\n    addTask: AddTaskHandler,\n    deleteTask: deleteTaskHandler,\n    completedTask: completedTask,\n    showAllTask: showAllTask,\n    showActive: showActiveTasks,\n    showCompleted: showCompletedTasks,\n    enableDarkMode: darkModeHandler,\n  })\n\n\n  return <toDoContext.Provider value={toDoContextArray}>\n    {props.children}\n  </toDoContext.Provider>\n}\n\nexport default ContextProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}